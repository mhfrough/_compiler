using System;
using System.Collections.Generic;

namespace InfixPostFix
{
	class Program
	{
		private static string data;
		static void Main(string[] args)
		{
			while (true) {
				Console.Write ("Input: ");
				data = Console.ReadLine ();
				Parse ();
				Console.WriteLine ("\n");
			}
		}

		static void Parse(){
			string[] tokens = data.Split(' ');

			Stack<string> s = new Stack<string>();
			List<string> result = new List<string>();
			int n;
			foreach (string c in tokens)
			{
				if(int.TryParse(c.ToString(), out n))
				{
					result.Add(c);
				}
				if (c == "(")
				{
					s.Push(c);
				}
				if (c == ")")
				{
					while (s.Count != 0 && s.Peek() != "(")
					{
						result.Add(s.Pop());
					}
					s.Pop();
				}
				if (isOp(c) == true)
				{
					while(s.Count != 0 && Priority(s.Peek()) >= Priority(c))
					{
						result.Add(s.Pop());
					}
					s.Push(c);
				}
			}
			while (s.Count != 0){
				result.Add(s.Pop());
			}
			for (int i = 0; i < result.Count; i++)
			{
				Console.Write("{0}", result[i]);
			}
		}

		static int Priority(string c)
		{
			if (c == "^")
			{
				return 3;
			}
			else if (c == "*" || c == "/")
			{
				return 2;
			}
			else if (c == "+" || c == "-")
			{
				return 1;
			}
			else
			{
				return 0;
			}
		}
		static bool isOp(string c)
		{
			if (c == "+" || c == "-" || c == "*" || c == "/" || c == "^")
			{
				return true;
			}
			else
			{
				return false;
			}
		}
	}
}
